generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("ATLAS_URI")
}

model users {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  username         String     @unique
  firstName        String?
  lastName         String?
  email            String     @unique
  password         String
  phoneNumber      String?
  location         String?
  description      String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  properties_owned Property[] @relation("UserProperties")
  properties_sell  Property[] @relation("UserPurchases")
  broker           Broker?    @relation(name: "UserBroker")
  favResidencieID  String[]   @db.ObjectId
}

enum Condition {
  New
  Used
}

enum PropertyType {
  Land
  House
  Vehicle
}

model Property {
  property_id  String       @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  sellerID     String       @db.ObjectId
  description  String
  propertyType PropertyType
  price        Float
  brokerID     String?      @db.ObjectId
  buyerID      String?      @db.ObjectId
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  images       String[] // Array of image URLs
  seller       users        @relation(fields: [sellerID], references: [id], name: "UserProperties")
  broker       Broker?      @relation(fields: [brokerID], references: [broker_id])
  buyer        users?       @relation(fields: [buyerID], references: [id], name: "UserPurchases")
  vehicle      Vehicle?
  land         Land?
  house        House?

  @@index([title], name: "title_idx")
  @@index([propertyType], name: "propertyType_idx")
}

model Vehicle {
  vehicle_id       String    @id @default(auto()) @map("_id") @db.ObjectId
  propertyID       String    @unique @db.ObjectId
  vehicleType      String
  brand            String
  model            String
  seats            Int
  mileage          Int
  ManufacturedYear Int
  cc               Int
  condition        Condition

  property Property @relation(fields: [propertyID], references: [property_id])
}

model Land {
  land_id        String   @id @default(auto()) @map("_id") @db.ObjectId
  propertyID     String   @unique @db.ObjectId
  area           String
  location       String
  land_type      String
  ownership_type String
  property       Property @relation(fields: [propertyID], references: [property_id])
}

model House {
  house_id   String   @id @default(auto()) @map("_id") @db.ObjectId
  propertyID String   @unique @db.ObjectId
  size       Float
  location   String
  rooms      Int
  bathrooms  Int
  property   Property @relation(fields: [propertyID], references: [property_id])
}

model Broker {
  broker_id               String     @id @default(auto()) @map("_id") @db.ObjectId
  userID                  String     @unique @db.ObjectId
  icCardNumber            String
  realEstateLicenseNumber String
  propertiesListed        Property[]
  user                    users      @relation(fields: [userID], references: [id], name: "UserBroker")
}
